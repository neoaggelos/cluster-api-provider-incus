---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: lxcclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LXCCluster
    listKind: LXCClusterList
    plural: lxcclusters
    singular: lxccluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Load Balancer address
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Load Balancer
      type: string
    - description: Cluster infrastructure is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Time duration since creation of LXCCluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LXCCluster is the Schema for the lxcclusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LXCClusterSpec defines the desired state of LXCCluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint to communicate
                  with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              loadBalancer:
                description: LoadBalancer is configuration for provisioning the load
                  balancer of the cluster.
                properties:
                  instanceSpec:
                    description: InstanceSpec can be used to adjust the load balancer
                      instance when using the "lxc" or "oci" load balancer type.
                    properties:
                      flavor:
                        description: |-
                          Flavor is configuration for the instance size (e.g. t3.micro, or c2-m4).

                          Examples:

                            - `t3.micro` -- match specs of an EC2 t3.micro instance
                            - `c2-m4` -- 2 cores, 4 GB RAM
                        type: string
                      image:
                        description: |-
                          Image to use for provisioning the load balancer machine. If not set,
                          a default image based on the load balancer type will be used.

                            - "oci": ghcr.io/neoaggelos/cluster-api-provider-lxc/haproxy:v0.0.1
                            - "lxc": haproxy from the default simplestreams server
                        properties:
                          fingerprint:
                            description: Fingerprint is the image fingerprint.
                            type: string
                          name:
                            description: |-
                              Name is the image name or alias.

                              Note that Incus and Canonical LXD use incompatible image servers
                              for Ubuntu images. To address this issue, setting image name to
                              `ubuntu:VERSION` is a shortcut for:

                                - Incus: "images:ubuntu/VERSION/cloud" (from https://images.linuxcontainers.org)
                                - LXD: "ubuntu:VERSION" (from https://cloud-images.ubuntu.com/releases)
                            type: string
                          protocol:
                            description: Protocol is the protocol to use for fetching
                              the image, e.g. "simplestreams".
                            type: string
                          server:
                            description: Server is the remote server, e.g. "https://images.linuxcontainers.org"
                            type: string
                        type: object
                      profiles:
                        description: Profiles is a list of profiles to attach to the
                          instance.
                        items:
                          type: string
                        type: array
                    type: object
                  ovnNetworkName:
                    description: OVNNetworkName is the name of the OVN network to
                      create the network load balancer when using the "network" load
                      balancer type.
                    type: string
                  type:
                    description: |-
                      Type of load balancer to provision for the cluster.

                        - "lxc" will spin up a plain Ubuntu LXC with haproxy installed.

                          The controller will automatically update the list of backends on the
                          haproxy configuration as control plane nodes are added or removed from
                          the cluster.

                          No other configuration is required for "lxc" mode. The load balancer
                          instance can be configured through `.spec.loadBalancer.instanceSpec`.

                          The load balancer container is a single point of failure to access
                          the workload cluster control plane. Therefore, it should only be used
                          for development clusters only.

                        - "external" will not create any load balancer. It must be used alongside
                          something like kube-vip, otherwise the cluster will fail to provision.

                          When using "external" mode, the load balancer address must be set in
                          `.spec.controlPlaneEndpoint.host` on the LXCCluster object.

                        - "oci" will spin up an OCI instance running haproxy using the kindest
                          haproxy image.

                          The controller will automatically update the list of backends on the
                          haproxy configuration as control plane nodes are added or removed from
                          the cluster.

                          No other configuration is required for "oci" mode. The load balancer
                          instance can be configured through `.spec.loadBalancer.instanceSpec`.

                          The load balancer container is a single point of failure to access
                          the workload cluster control plane. Therefore, it should only be used
                          for development clusters only.

                          Requires server extensions: "instance_oci"

                        - "network" will create a network load balancer.

                          The controller will automatically update the list of backends on the
                          haproxy configuration control plane nodes are added or removed from
                          the cluster.

                          When using "network" mode, the load balancer address must be set in
                          .spec.controlPlaneEndpoint.host on the LXCCluster object. In addition,
                          the ovn network to use must be set in .spec.loadBalancer.ovnNetworkName.
                          The cluster administrator is responsible to ensure that the OVN network
                          is configured and that the LXCMachineTemplate objects have appropriate
                          profiles to use the OVN network.

                          Requires server extensions:
                          "network_load_balancer", "network_load_balancer_health_checks"
                    enum:
                    - lxc
                    - external
                    - oci
                    - network
                    type: string
                type: object
              secretRef:
                description: SecretRef references a secret with credentials to access
                  the LXC (e.g. Incus, LXD) server.
                properties:
                  name:
                    description: Name is the name of the secret to use. The secret
                      must already exist in the same namespace as the parent object.
                    type: string
                required:
                - name
                type: object
              skipCloudProviderNodePatch:
                description: |-
                  SkipCloudProviderNodePatch will skip patching Nodes in the workload cluster
                  to set `.spec.providerID`. Note that this requires deploying the external
                  cloud controller manager, otherwise Machines will not be able to be tied
                  to the respective Nodes in the workload cluster.
                type: boolean
              skipDefaultKubeadmProfile:
                description: |-
                  Skip creation of the default kubeadm profile "cluster-api-$namespace-$name"
                  for LXCClusters.

                  In this case, the cluster administrator is responsible to create the
                  profile manually and set the `.spec.template.spec.profiles` field of all
                  LXCMachineTemplate objects.

                  This is useful in cases where a restricted project is used, which does not
                  allow privileged containers.
                type: boolean
            required:
            - loadBalancer
            type: object
          status:
            description: LXCClusterStatus defines the observed state of LXCCluster.
            properties:
              conditions:
                description: Conditions defines current service state of the LXCCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready denotes that the LXC cluster (infrastructure) is
                  ready.
                type: boolean
              v1beta2:
                description: V1Beta2 groups all status fields that will be added in
                  LXCCluster's status with the v1beta2 version.
                properties:
                  conditions:
                    description: |-
                      conditions represents the observations of a LXCCluster's current state.
                      Known condition types are Ready, LoadBalancerAvailable, Deleting, Paused.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
