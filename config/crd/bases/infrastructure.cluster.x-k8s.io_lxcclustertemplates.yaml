---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: lxcclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LXCClusterTemplate
    listKind: LXCClusterTemplateList
    plural: lxcclustertemplates
    singular: lxcclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of LXCClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: LXCClusterTemplate is the Schema for the lxcclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LXCClusterTemplateSpec defines the desired state of LXCClusterTemplate.
            properties:
              template:
                description: LXCClusterTemplateResource describes the data needed
                  to create a LXCCluster from a template.
                properties:
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: LXCClusterSpec defines the desired state of LXCCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          to communicate with the control plane.
                        properties:
                          host:
                            description: host is the hostname on which the API server
                              is serving.
                            maxLength: 512
                            type: string
                          port:
                            description: port is the port on which the API server
                              is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      loadBalancer:
                        description: LoadBalancer is configuration for provisioning
                          the load balancer of the cluster.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          external:
                            description: |-
                              External will not create a load balancer. It must be used alongside something like kube-vip, otherwise the cluster will fail to provision.

                              When using the "external" mode, the load balancer address must be set in `.spec.controlPlaneEndpoint.host` on the LXCCluster object.
                            type: object
                          lxc:
                            description: |-
                              LXC will spin up a plain Ubuntu instance with haproxy installed.

                              The controller will automatically update the list of backends on the haproxy configuration as control plane nodes are added or removed from the cluster.

                              No other configuration is required for "lxc" mode. The load balancer instance can be configured through the .instanceSpec field.

                              The load balancer container is a single point of failure to access the workload cluster control plane. Therefore, it should only be used for development or evaluation clusters.
                            properties:
                              instanceSpec:
                                description: InstanceSpec can be used to adjust the
                                  load balancer instance configuration.
                                properties:
                                  flavor:
                                    description: |-
                                      Flavor is configuration for the instance size (e.g. t3.micro, or c2-m4).

                                      Examples:

                                        - `t3.micro` -- match specs of an EC2 t3.micro instance
                                        - `c2-m4` -- 2 cores, 4 GB RAM
                                    type: string
                                  image:
                                    description: |-
                                      Image to use for provisioning the load balancer machine. If not set,
                                      a default image based on the load balancer type will be used.

                                        - "oci": ghcr.io/neoaggelos/cluster-api-provider-lxc/haproxy:v0.0.1
                                        - "lxc": haproxy from the default simplestreams server
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the image fingerprint.
                                        type: string
                                      name:
                                        description: |-
                                          Name is the image name or alias.

                                          Note that Incus and Canonical LXD use incompatible image servers
                                          for Ubuntu images. To address this issue, setting image name to
                                          `ubuntu:VERSION` is a shortcut for:

                                            - Incus: "images:ubuntu/VERSION/cloud" (from https://images.linuxcontainers.org)
                                            - LXD: "ubuntu:VERSION" (from https://cloud-images.ubuntu.com/releases)
                                        type: string
                                      protocol:
                                        description: Protocol is the protocol to use
                                          for fetching the image, e.g. "simplestreams".
                                        type: string
                                      server:
                                        description: Server is the remote server,
                                          e.g. "https://images.linuxcontainers.org"
                                        type: string
                                    type: object
                                  profiles:
                                    description: Profiles is a list of profiles to
                                      attach to the instance.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          oci:
                            description: |-
                              OCI will spin up an OCI instance running the kindest/haproxy image.

                              The controller will automatically update the list of backends on the haproxy configuration as control plane nodes are added or removed from the cluster.

                              No other configuration is required for "oci" mode. The load balancer instance can be configured through the .instanceSpec field.

                              The load balancer container is a single point of failure to access the workload cluster control plane. Therefore, it should only be used for development or evaluation clusters.

                              Requires server extensions: "instance_oci"
                            properties:
                              instanceSpec:
                                description: InstanceSpec can be used to adjust the
                                  load balancer instance configuration.
                                properties:
                                  flavor:
                                    description: |-
                                      Flavor is configuration for the instance size (e.g. t3.micro, or c2-m4).

                                      Examples:

                                        - `t3.micro` -- match specs of an EC2 t3.micro instance
                                        - `c2-m4` -- 2 cores, 4 GB RAM
                                    type: string
                                  image:
                                    description: |-
                                      Image to use for provisioning the load balancer machine. If not set,
                                      a default image based on the load balancer type will be used.

                                        - "oci": ghcr.io/neoaggelos/cluster-api-provider-lxc/haproxy:v0.0.1
                                        - "lxc": haproxy from the default simplestreams server
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the image fingerprint.
                                        type: string
                                      name:
                                        description: |-
                                          Name is the image name or alias.

                                          Note that Incus and Canonical LXD use incompatible image servers
                                          for Ubuntu images. To address this issue, setting image name to
                                          `ubuntu:VERSION` is a shortcut for:

                                            - Incus: "images:ubuntu/VERSION/cloud" (from https://images.linuxcontainers.org)
                                            - LXD: "ubuntu:VERSION" (from https://cloud-images.ubuntu.com/releases)
                                        type: string
                                      protocol:
                                        description: Protocol is the protocol to use
                                          for fetching the image, e.g. "simplestreams".
                                        type: string
                                      server:
                                        description: Server is the remote server,
                                          e.g. "https://images.linuxcontainers.org"
                                        type: string
                                    type: object
                                  profiles:
                                    description: Profiles is a list of profiles to
                                      attach to the instance.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          ovn:
                            description: |-
                              OVN will create a network load balancer.

                              The controller will automatically update the list of backends for the network load balancer as control plane nodes are added or removed from the cluster.

                              The cluster administrator is responsible to ensure that the OVN network is configured properly and that the LXCMachineTemplate objects have appropriate profiles to use the OVN network.

                              When using the "ovn" mode, the load balancer address must be set in `.spec.controlPlaneEndpoint.host` on the LXCCluster object.

                              Requires server extensions: "network_load_balancer", "network_load_balancer_health_checks"
                            properties:
                              networkName:
                                description: NetworkName is the name of the network
                                  to create the load balancer.
                                type: string
                            type: object
                        type: object
                      secretRef:
                        description: SecretRef references a secret with credentials
                          to access the LXC (e.g. Incus, LXD) server.
                        properties:
                          name:
                            description: Name is the name of the secret to use. The
                              secret must already exist in the same namespace as the
                              parent object.
                            type: string
                        required:
                        - name
                        type: object
                      skipCloudProviderNodePatch:
                        description: SkipCloudProviderNodePatch is deprecated and
                          does not have any effect.
                        type: boolean
                      skipDefaultKubeadmProfile:
                        description: |-
                          Skip creation of the default kubeadm profile "cluster-api-$namespace-$name"
                          for LXCClusters.

                          In this case, the cluster administrator is responsible to create the
                          profile manually and set the `.spec.template.spec.profiles` field of all
                          LXCMachineTemplate objects.

                          This is useful in cases where a restricted project is used, which does not
                          allow privileged containers.
                        type: boolean
                      unprivileged:
                        description: |-
                          Unprivileged will launch unprivileged LXC containers for the cluster machines.

                          Known limitations apply for unprivileged LXC containers (e.g. cannot use NFS volumes).
                        type: boolean
                    required:
                    - loadBalancer
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
