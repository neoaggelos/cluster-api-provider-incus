---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: lxcmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LXCMachineTemplate
    listKind: LXCMachineTemplateList
    plural: lxcmachinetemplates
    singular: lxcmachinetemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of LXCMachineTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LXCMachineTemplate is the Schema for the lxcmachinetemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LXCMachineTemplateSpec defines the desired state of LXCMachineTemplate.
            properties:
              template:
                description: LXCMachineTemplateResource describes the data needed
                  to create a LXCMachine from a template.
                properties:
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      flavor:
                        description: |-
                          Flavor is configuration for the instance size (e.g. t3.micro, or c2-m4).

                          Examples:
                            - `t3.micro` -- match specs of an EC2 t3.micro instance
                            - `c2-m4` -- 2 cores, 4 GB RAM
                        type: string
                      image:
                        description: |-
                          Image is the image to use for provisioning the machine.

                          If not set, a standard Ubuntu image from the default remote will be used. In that case,
                          preKubeadmCommands must be set to install containerd, kubeadm and configure the instance.
                        properties:
                          fingerprint:
                            description: Fingerprint is the image fingerprint.
                            type: string
                          name:
                            description: Name is the image name or alias.
                            type: string
                          protocol:
                            description: Protocol is the protocol to use for fetching
                              the image, e.g. "simplestreams".
                            type: string
                          server:
                            description: Server is the remote server, e.g. "https://images.linuxcontainers.org"
                            type: string
                        type: object
                      profiles:
                        description: Profiles is a list of profiles to attach to the
                          instance.
                        items:
                          type: string
                        type: array
                      providerID:
                        description: ProviderID is the container name in ProviderID
                          format (lxc:///<containername>)
                        type: string
                      type:
                        description: Type of instance to create (container or virtual
                          machine). Empty defaults to "container".
                        enum:
                        - container
                        - virtual-machine
                        - ""
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
